/*By placing a @charset "UTF-8" here in the first line, an error appeared under "header".
Deleted, anyway. Will find out later about this.
The same happened in the "style.ccs" at the root folder.*/

header {
    background-color: rgb(3, 92, 209);
    color: white;
    font-family: Arial, Helvetica, sans-serif;
    font-size: small;
    padding: 1px;
    text-align: center;
}

body {
    background-color: rgb(200, 230, 240);
    font-family: Arial, Helvetica, sans-serif;
    font-size: 16pt;
    margin-right: 5%;
    margin-left: 5%;

}

p {
    text-align: justify;
    margin-right: 5%;
  }

 

/*As soon as I created article classes for organizing the topics, h1 changed font size to a little smaller than h2. It only returns to its previos (original) size if I attribute 3rem to it in CSS. Very, VERY STRANGE! */

h1 {
    color: rgb(1, 14, 136);
    /*font-size: 3rem;*/
}

#different {
  color: darkred;
}

h2 {
    color: rgb(2, 175, 255);
}
h3 {
    color: rgb(2, 175, 255);
}

.clarify-box {
  box-shadow: inset 0 0 1.5em chartreuse, 0 0 1em blue;
  width: 70%;
  margin: auto; /*this one centralizes the box - left and right.*/
  margin-top: 3em; /*not affected by the "auto" above*/
  margin-bottom: 3em; /*not affected by the "auto" above*/
  padding: 2%;
  color: blue;

}

footer {
  background-color: rgb(3, 92, 209);
  color: white;
  padding: 30px;
  text-align: center;
}

figure {
    margin-bottom: 50px;
    width: 80%;
    margin-left: 0%;
}


/* Here are the article names. I'm dividing into articles (before the course gets to this subject) after reading about CSS best practices somewhere*/

      .navbar-css {}

      .color-class {
        background-color: rgb(150, 225, 238);
      }

      .typography-class {
                background-color: rgb(200, 230, 240);
      }

      .text-alignment-class {
                background-color: rgb(150, 225, 238);
      }

      .explained-id-class {
                background-color: rgb(200, 230, 240);
      }

      .pseudo-class {
                background-color: rgb(150, 225, 238);        
      }

      .pseudo-elements-class {
        background-color: rgb(200, 230, 240);
      }

      .box-model-intro {
        background-color: rgb(150, 225, 238);
        padding: 2em;
        border: 7px solid blue;
        margin: 2em;
        outline: 7px solid yellow;
      }
      

      


/* End of articles*/





/* NAVBAR style start, copied and modified from
 https://www.w3schools.com/css/tryit.asp?filename=trycss_navbar_vertical */

    ul.navbar {
      margin: 0;
      padding: 0;
      list-style-type: none;
      margin-top: 1px;

    }

    li a {
      display: block;
      width: 200px;
      background-color: white;
      padding: 4px;
      color: rgb(255, 255, 255);
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      border: 1px solid rgb(200, 230, 240);
      text-decoration: none;
}
/* Nav Bar style end */


/*gradient class properties*/

    .gradient {
      height: 500px;
      width: 70%;
      box-shadow: 5px 5px 15px blueviolet;
      margin: auto;
      background-image: radial-gradient( white, blue);
      padding: 3%;
    }

/*gradient end*/


.alignment {
  background-color: rgb(8, 204, 90);
  width: 37%;
  height: auto;
  display: inline-block;
  padding: 3%;
  margin: 3%;
}


/*PSEUDO-CLASSES - 3 boxes example from Curso em VÃ­deo*/

div {
  display: inline-block;
  background-color: lightgray;
  text-align: center;
  width: auto;
  height: fit-content;
  border: 1px solid red;
  padding: 1%;
  margin: 1%;
}

div:hover {
  background-color: coral;
  color: red;
  text-align: left;
  font-weight: bolder;
  font-family: 'Times New Roman', Times, serif;
  font-style: italic;


}

div > p {
  display: none; /*Here it hides any paragraphs there could be inside the div */

}

#d1:hover > p {
  display: inline-block; /*And here it shows the paragraph*/
  font-size: 1em;
  color: blue;
  background-color: white;
  width: fit-content;
  height: 1em;
}



/*Another example of pseudo-classes, from w3schools*/

/*Note: a:hover MUST come after a:link and a:visited in the CSS definition in order to be effective.*/


/*Note: a:active MUST come after a:hover in the CSS definition in order to be effective.*/


/* So the order is:  LINK   ,   VISITED   ,   HOVER   ,   ACTIVE   */


/* unvisited link */
a:link {
  color: red;
}

/* visited link */
a:visited {
  color: purple;
}

/* mouse over link */
a:hover {
  color: darkorange;
}

/* selected link */
a:active {
  color: black;
}



/*   PSEUDO-ELEMENTS   */ 


.pseu-el-paragraph::after {
  content: ' [link - this green text was added by a pseudo-element effect]';
  text-decoration: none;
  color: darkgreen;
}

.lista {
  line-height: 2em;
  font-weight: 800;
  list-style: none;
}


/*    end of PSEUDO-ELEMENTS   */ 


/*LIST STYLING*/
/*List Headings */

.top-of-list {
  font-size: 1.3em;
}

/* List Highlighted Items */

.emphasis-list {
  font-family: 'Courier New', Courier, monospace;
  font-size: 1.2em;
  font-weight: bold;
}

/*end of LIST STYLING*/


/*BOX STYLING EXAMPLES*/

.bkgr-color {
  background-color: cornflowerblue;
}

.box-size-and-color {
  background-color: cornflowerblue;
  width: 300px;
  height: 300px;
}

.box-size-color-position {
  background-color: cornflowerblue;
  width: 300px;
  height: 300px;
  margin-left: 10%;
}

/*end of BOX STYLING EXAMPLES*/


/* EXAMPLE OF SHORTHAND IN A CLASS CALLED "short"

Shorthand will be applied to the following items of a 
paragraph tag and the values MUST be in the following 
order for each one :

  border: width style color

  padding: top right bottom left (note that it's clockwise)

  margin: top right bottom left (note that it's clockwise)

  outline: width style color

*/

.short {

  border: 10px solid rgb(0, 153, 255);
  
  padding: 10px 20px 30px 40px;

  /*
  If the values are all the same (let's say 50px), just declare 
  "padding: 10px" and the value will be modify all sides.
  Otherwise you name the values one by one, 
  like the valid padding above: "10px 20px 30px 40px;" 
  or whatever values.
  */

  /*
  If you declate only 2 values for margins or paddings (e.g. 50px 50px), 
  the first one will set  top an bottom values; 
  the second one will set right and left values.
  */
  
  margin: 50px auto;
  /*Margins top and bottom 50px, 
  margins right and left "auto" (it centralizes)*/

  outline: 2.5px dashed salmon;
}

/* end of EXAMPLE OF SHORTHAND... */

/* Child element CSS notation */

figure > aside {
  background-color: black;
  color: white;
}

